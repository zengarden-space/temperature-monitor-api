name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: gitea.zengarden.space
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && vars.GITEA_RUNNER == 'true'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.12.0'

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_WRITE_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Lint Helm chart
        run: helm lint ./helm/$(echo ${{github.repository}} | cut -d'/' -f2)

      - name: Update Helm values
        run: |
          repo_name=$(echo ${{github.repository}} | cut -d'/' -f2)
          tag=$(echo "${{ steps.meta.outputs.tags }}" | head -n +3 | tail -n 1 | cut -d':' -f2)
          echo "Using tag: $tag"
          helm template $repo_name ./helm/$repo_name \
            --namespace $repo_name \
            --values ./helm/values-dev.yaml \
            --set image.tag=$tag > manifest.yaml

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: zengarden-space/manifests
          ref: main
          path: manifests
          token: ${{ secrets.CONTENT_WRITE_TOKEN }}
          
      - name: Push changes
        run: |
          repo_name=$(echo ${{github.repository}} | cut -d'/' -f2)
          cd manifests
          git config --local user.name "Gitea Actions Bot"
          git config --local user.email "gitea-actions[bot]@users.noreply.zengarden.space"
          mkdir -p ./$repo_name/dev
          
          # Retry loop for git operations
          for attempt in {1..5}; do
            echo "Attempt $attempt of 5"
            
            # Pull latest changes
            if ! git pull origin main; then
              echo "Failed to pull on attempt $attempt"
              continue
            fi
            
            # Copy manifest and add files
            cp ../manifest.yaml ./$repo_name/dev/manifest.yaml
            git add .
            
            # Check if there are changes to commit
            if git diff --cached --quiet; then
              echo "No changes to commit"
              break
            fi
            
            # Commit changes
            if ! git commit -m "${{ github.repository }}: ${{ github.event.head_commit.message }} ${{github.sha}}"; then
              echo "Failed to commit on attempt $attempt"
              git reset --hard HEAD
              continue
            fi
            
            # Try to push
            if git push origin main; then
              echo "Successfully pushed on attempt $attempt"
              break
            else
              echo "Failed to push on attempt $attempt, discarding commit"
              git reset --hard HEAD~1
              
              if [ $attempt -eq 5 ]; then
                echo "Failed to push after 5 attempts"
                exit 1
              fi
              
              sleep $((attempt * 2))  # Exponential backoff
            fi
          done
